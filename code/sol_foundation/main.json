{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "3310540365129395917"
    }
  },
  "parameters": {
    "appname": {
      "type": "string",
      "defaultValue": "app",
      "metadata": {
        "description": "Name of the workload"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the workload"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "vNET CIDR"
      }
    },
    "frontendsSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/24",
      "metadata": {
        "description": "Front-end subnet CIDR"
      }
    },
    "logicSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.1.0/24",
      "metadata": {
        "description": "Business logic subnet CIDR"
      }
    },
    "backendSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.2.0/24",
      "metadata": {
        "description": "Back-end subnet CIDR"
      }
    },
    "ServicesSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.3.0/24",
      "metadata": {
        "description": "Services subnet CIDR"
      }
    },
    "BastionSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.4.0/24",
      "metadata": {
        "description": "Bastion subnet CIDR"
      }
    },
    "ManagementSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.5.0/24",
      "metadata": {
        "description": "Management subnet CIDR"
      }
    },
    "RunnersSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.6.0/24",
      "metadata": {
        "description": "Runner agents subnet CIDR"
      }
    },
    "managementVMUser": {
      "type": "string",
      "defaultValue": "azAdmin",
      "metadata": {
        "description": "Management VM username"
      }
    },
    "managementVMPassword": {
      "type": "securestring",
      "defaultValue": "Welcome2024!",
      "metadata": {
        "description": "Management VM password"
      }
    },
    "runnerVMUser": {
      "type": "string",
      "defaultValue": "azAdmin",
      "metadata": {
        "description": "Runner Agent VM username"
      }
    },
    "runnerVMPassword": {
      "type": "securestring",
      "defaultValue": "Welcome2024!",
      "metadata": {
        "description": "Runner Agent VM password"
      }
    },
    "zones": {
      "type": "array",
      "defaultValue": [
        "agentsvc.azure-automation.net",
        "[format('blob.{0}', environment().suffixes.storage)]",
        "monitor.azure.com",
        "ods.opinsights.azure.com",
        "oms.opinsights.azure.com"
      ]
    }
  },
  "variables": {
    "suffix": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]",
    "baseName": "[format('{0}-{1}-prod-{2}', parameters('location'), parameters('appname'), variables('suffix'))]",
    "privateDnsZoneName": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]"
  },
  "resources": [
    {
      "type": "microsoft.insights/privateLinkScopes",
      "apiVersion": "2021-07-01-preview",
      "name": "[format('ampls-{0}', variables('baseName'))]",
      "location": "global",
      "properties": {
        "accessModeSettings": {
          "ingestionAccessMode": "PrivateOnly",
          "queryAccessMode": "Open"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-04-01",
      "name": "[format('pe-ampls-{0}', variables('suffix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.servicessubnetid.value]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "pe-ampls-connection",
            "properties": {
              "privateLinkServiceId": "[resourceId('microsoft.insights/privateLinkScopes', format('ampls-{0}', variables('baseName')))]",
              "groupIds": [
                "azuremonitor"
              ]
            }
          }
        ],
        "customNetworkInterfaceName": "[format('pe-ampls-{0}-nic', variables('suffix'))]"
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/privateLinkScopes', format('ampls-{0}', variables('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]",
        "privateDnsZoneForAmpls"
      ]
    },
    {
      "type": "Microsoft.Insights/privateLinkScopes/scopedResources",
      "apiVersion": "2021-07-01-preview",
      "name": "[format('{0}/{1}', format('ampls-{0}', variables('baseName')), 'amplsScopedLaw')]",
      "properties": {
        "linkedResourceId": "[reference(resourceId('Microsoft.Resources/deployments', 'la-deployment'), '2022-09-01').outputs.resourceId.value]"
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/privateLinkScopes', format('ampls-{0}', variables('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', 'la-deployment')]"
      ]
    },
    {
      "copy": {
        "name": "privateDnsZoneForAmpls",
        "count": "[length(parameters('zones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[format('privatelink.{0}', parameters('zones')[copyIndex()])]",
      "location": "global",
      "properties": {}
    },
    {
      "copy": {
        "name": "privateDnsZoneLink",
        "count": "[length(parameters('zones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', format('privatelink.{0}', parameters('zones')[copyIndex()]), format('{0}-link', parameters('zones')[copyIndex()]))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.resourceId.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]",
        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}', parameters('zones')[copyIndex()]))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2021-05-01",
      "name": "[format('{0}/{1}', format('pe-ampls-{0}', variables('suffix')), 'pvtEndpointDnsGroupForAmpls')]",
      "properties": {
        "copy": [
          {
            "name": "privateDnsZoneConfigs",
            "count": "[length(parameters('zones'))]",
            "input": {
              "name": "[format('privatelink.{0}', parameters('zones')[copyIndex('privateDnsZoneConfigs')])]",
              "properties": {
                "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}', parameters('zones')[copyIndex('privateDnsZoneConfigs')]))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', format('pe-ampls-{0}', variables('suffix')))]",
        "privateDnsZoneForAmpls"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-10-01",
      "name": "[format('kv-{0}', variables('suffix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "createMode": "default",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "enableRbacAuthorization": true,
        "enablePurgeProtection": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        },
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 7,
        "tenantId": "[subscription().tenantId]"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[format('pe-kv-{0}', variables('suffix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[format('pe-kv-{0}', variables('suffix'))]",
            "properties": {
              "groupIds": [
                "vault"
              ],
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', variables('suffix')))]"
            }
          }
        ],
        "subnet": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.servicessubnetid.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', variables('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('privateDnsZoneName')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/vault-PrivateDnsZoneGroup', format('pe-kv-{0}', variables('suffix')))]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[variables('privateDnsZoneName')]",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('pe-kv-{0}', variables('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', variables('suffix')))))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.resourceId.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', variables('suffix')))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "la-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "logworkspaceName": {
            "value": "[format('la-{0}', variables('baseName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "PerGB2018"
          },
          "retention": {
            "value": 30
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "5813230445666576623"
            }
          },
          "parameters": {
            "logworkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the workspace"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location of the workspace"
              }
            },
            "sku": {
              "type": "string",
              "allowedValues": [
                "Free",
                "Standalone",
                "PerNode",
                "PerGB2018"
              ],
              "metadata": {
                "description": "SKU for the workspace"
              }
            },
            "retention": {
              "type": "int",
              "metadata": {
                "description": "Retention time in days for the workspace. 730 Days is the max for non unlimited skus"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logworkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                },
                "retentionInDays": "[parameters('retention')]",
                "publicNetworkAccessForIngestion": "Disabled",
                "publicNetworkAccessForQuery": "Disabled"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed log analytics workspace."
              },
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logworkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnet-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "baseName": {
            "value": "[variables('baseName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "frontendsSubnetPrefix": {
            "value": "[parameters('frontendsSubnetPrefix')]"
          },
          "logicSubnetPrefix": {
            "value": "[parameters('logicSubnetPrefix')]"
          },
          "backendSubnetPrefix": {
            "value": "[parameters('backendSubnetPrefix')]"
          },
          "ServicesSubnetPrefix": {
            "value": "[parameters('ServicesSubnetPrefix')]"
          },
          "BastionSubnetPrefix": {
            "value": "[parameters('BastionSubnetPrefix')]"
          },
          "ManagementSubnetPrefix": {
            "value": "[parameters('ManagementSubnetPrefix')]"
          },
          "RunnersSubnetPrefix": {
            "value": "[parameters('RunnersSubnetPrefix')]"
          },
          "logworkspaceid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'la-deployment'), '2022-09-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "7510599926934717295"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "This is the base name for each Azure resource name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "metadata": {
                "description": "vNET CIDR"
              }
            },
            "frontendsSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Front-end subnet CIDR"
              }
            },
            "logicSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Business logic subnet CIDR"
              }
            },
            "backendSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Back-end subnet CIDR"
              }
            },
            "ServicesSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Services subnet CIDR"
              }
            },
            "BastionSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Bastion subnet CIDR"
              }
            },
            "ManagementSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Management subnet CIDR"
              }
            },
            "RunnersSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "Runner agents subnet CIDR"
              }
            },
            "logworkspaceid": {
              "type": "string",
              "metadata": {
                "description": "The ID of the logworkspace"
              }
            }
          },
          "variables": {
            "vnetName": "[format('vnet-{0}', parameters('baseName'))]",
            "subnetFEName": "[format('snet-{0}-FrontEnd', parameters('baseName'))]",
            "subnetBLName": "[format('snet-{0}-MidTier', parameters('baseName'))]",
            "subnetBEName": "[format('snet-{0}-BackEnd', parameters('baseName'))]",
            "subnetSVSName": "[format('snet-{0}-Services', parameters('baseName'))]",
            "subnetBAName": "AzureBastionSubnet",
            "subnetMGMTName": "[format('snet-{0}-Management', parameters('baseName'))]",
            "subnetRAName": "[format('snet-{0}-RunnerAgents', parameters('baseName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('nsg-{0}-bastion', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowHttpsInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "Internet",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowGatewayManagerInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowLoadBalancerInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunicationInBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "DenyAllInBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowSshRdpOutBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowAzureCloudCommunicationOutBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunicationOutBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowGetSessionInformationOutBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ],
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "DenyAllOutBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 1000,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-bastion', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bastion', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-frontend', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-frontend', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-midtier', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-midtier', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-midtier', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-backend', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-backend', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-management', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-management', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-management', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-services', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-services', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-runneragents', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-runneragents', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-runneragents', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetFEName')]",
                    "properties": {
                      "addressPrefix": "[parameters('frontendsSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('subnetBLName')]",
                    "properties": {
                      "addressPrefix": "[parameters('logicSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-midtier', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('subnetBEName')]",
                    "properties": {
                      "addressPrefix": "[parameters('backendSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('subnetSVSName')]",
                    "properties": {
                      "addressPrefix": "[parameters('ServicesSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
                      },
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnetBAName')]",
                    "properties": {
                      "addressPrefix": "[parameters('BastionSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bastion', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('subnetMGMTName')]",
                    "properties": {
                      "addressPrefix": "[parameters('ManagementSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-management', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('subnetRAName')]",
                    "properties": {
                      "addressPrefix": "[parameters('RunnersSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-runneragents', parameters('baseName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bastion', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-midtier', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-management', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-runneragents', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/virtualNetworks/{0}', variables('vnetName'))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
              ]
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the virtual network."
              },
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the virtual network."
              },
              "value": "[variables('vnetName')]"
            },
            "frontendsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetFEName'))]"
            },
            "logicsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetBLName'))]"
            },
            "backendsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetBEName'))]"
            },
            "servicessubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetSVSName'))]"
            },
            "bastionsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetBAName'))]"
            },
            "managementsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetMGMTName'))]"
            },
            "runneragentsubnetid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetMGMTName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'la-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "bastion-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[variables('baseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetname": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.name.value]"
          },
          "bastionSubnetName": {
            "value": "AzureBastionSubnet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "6247735463242776364"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "This is the base name for each Azure resource name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "vnetname": {
              "type": "string",
              "metadata": {
                "description": "vnet name"
              }
            },
            "bastionSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Bastion subnet name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-08-01",
              "name": "[format('bas-{0}', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "subnet": {
                        "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), parameters('bastionSubnetName'))]"
                      },
                      "publicIPAddress": {
                        "id": "[reference(resourceId('Microsoft.Resources/deployments', 'PIP-Bastion-deployment'), '2022-09-01').outputs.pipid.value]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'PIP-Bastion-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "PIP-Bastion-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "publicIpAddressName": {
                    "value": "pip-bastion"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "sku": {
                    "value": "Standard"
                  },
                  "publicIPAllocationMethod": {
                    "value": "Static"
                  },
                  "ddosProtectionMode": {
                    "value": "Enabled"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2548089450870272940"
                    }
                  },
                  "parameters": {
                    "publicIpAddressName": {
                      "type": "string",
                      "defaultValue": "myPublicIPAddress",
                      "metadata": {
                        "description": "Name of the public IP address resource."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure region for the deployment, resource group and resources."
                      }
                    },
                    "extendedLocation": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "Standard",
                        "Basic"
                      ],
                      "metadata": {
                        "description": "Sku for the resource."
                      }
                    },
                    "domainNameLabel": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Domain name label for the resource."
                      }
                    },
                    "domainNameLabelScope": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Domain name label scope for the resource."
                      }
                    },
                    "routingPreference": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Routing Preference for the resource."
                      }
                    },
                    "publicIPAllocationMethod": {
                      "type": "string",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Allocation method for the resource."
                      }
                    },
                    "publicIpAddressVersion": {
                      "type": "string",
                      "defaultValue": "IPv4",
                      "allowedValues": [
                        "IPv4",
                        "IPv6"
                      ],
                      "metadata": {
                        "description": "Version for the resource."
                      }
                    },
                    "idleTimeoutInMinutes": {
                      "type": "int",
                      "defaultValue": 4,
                      "metadata": {
                        "description": "Idle Timeout for the resource."
                      }
                    },
                    "tier": {
                      "type": "string",
                      "defaultValue": "Regional",
                      "allowedValues": [
                        "Regional",
                        "Global"
                      ],
                      "metadata": {
                        "description": "Tier for the resource."
                      }
                    },
                    "zones": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Zones for the resource."
                      }
                    },
                    "ddosProtectionMode": {
                      "type": "string",
                      "allowedValues": [
                        "Disabled",
                        "Enabled",
                        "VirtualNetworkInherited"
                      ]
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional tags for the resources."
                      }
                    }
                  },
                  "variables": {
                    "dns": {
                      "domainNameLabel": "[parameters('domainNameLabel')]",
                      "domainNameLabelScope": "[parameters('domainNameLabelScope')]"
                    },
                    "tags": [
                      {
                        "ipTagType": "RoutingPreference",
                        "tag": "[parameters('routingPreference')]"
                      }
                    ],
                    "ipTagsVariable": "[if(empty(parameters('routingPreference')), json('null'), variables('tags'))]",
                    "ddosSettings": "[if(empty(parameters('ddosProtectionMode')), json('null'), createObject('protectionMode', parameters('ddosProtectionMode')))]",
                    "propertiesNoDns": {
                      "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "publicIpAddressVersion": "[parameters('publicIpAddressVersion')]",
                      "ipTags": "[variables('ipTagsVariable')]",
                      "ddosSettings": "[variables('ddosSettings')]"
                    },
                    "propertiesDns": {
                      "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "publicIpAddressVersion": "[parameters('publicIpAddressVersion')]",
                      "dnsSettings": "[variables('dns')]",
                      "ipTags": "[variables('ipTagsVariable')]",
                      "ddosSettings": "[variables('ddosSettings')]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('publicIpAddressName')]",
                      "location": "[parameters('location')]",
                      "extendedLocation": "[if(empty(parameters('extendedLocation')), null(), parameters('extendedLocation'))]",
                      "zones": "[parameters('zones')]",
                      "tags": "[parameters('tagsByResource')]",
                      "sku": {
                        "name": "[parameters('sku')]",
                        "tier": "[parameters('tier')]"
                      },
                      "properties": "[if(empty(parameters('domainNameLabel')), variables('propertiesNoDns'), variables('propertiesDns'))]"
                    }
                  ],
                  "outputs": {
                    "pipid": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ManagementVM-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.managementsubnetid.value]"
          },
          "vmName": {
            "value": "Mgmt01"
          },
          "vmAdminUserName": {
            "value": "[parameters('managementVMUser')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('managementVMPassword')]"
          },
          "vmSize": {
            "value": "Standard_B2ms"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13156253837114046879"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "location to deploy the VM"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "subnet ID the VM should be tied to"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "name of the VM"
              }
            },
            "vmAdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Username for the admin"
              }
            },
            "vmAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "password for the admin account"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "SKU size"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-mid', parameters('vmName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName'))))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUserName')]",
                  "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "authentication": {
                    "managedIdentity": {
                      "identifier-name": "mi_res_id",
                      "identifier-value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "windowsVMId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "windowsVMName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "RunnerAgentVM-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-deployment'), '2022-09-01').outputs.runneragentsubnetid.value]"
          },
          "vmAdminPassword": {
            "value": "[parameters('runnerVMPassword')]"
          },
          "vmAdminUserName": {
            "value": "[parameters('runnerVMUser')]"
          },
          "vmName": {
            "value": "RA01"
          },
          "vmSize": {
            "value": "Standard_B2ms"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13156253837114046879"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "location to deploy the VM"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "subnet ID the VM should be tied to"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "name of the VM"
              }
            },
            "vmAdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Username for the admin"
              }
            },
            "vmAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "password for the admin account"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "SKU size"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-mid', parameters('vmName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName'))))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUserName')]",
                  "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "authentication": {
                    "managedIdentity": {
                      "identifier-name": "mi_res_id",
                      "identifier-value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "windowsVMId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "windowsVMName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnet-deployment')]"
      ]
    }
  ]
}