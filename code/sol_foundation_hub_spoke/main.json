{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "14427927640840100561"
    }
  },
  "parameters": {
    "appname": {
      "type": "string",
      "defaultValue": "app",
      "metadata": {
        "description": "Name of the workload"
      }
    },
    "env": {
      "type": "string",
      "defaultValue": "prod",
      "allowedValues": [
        "prod",
        "acc",
        "test",
        "dev"
      ],
      "metadata": {
        "description": "Workload environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the workload"
      }
    },
    "hubvnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "HUB vNET CIDR"
      }
    },
    "ServicesSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/24",
      "metadata": {
        "description": "HUB Services subnet CIDR"
      }
    },
    "BastionSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.1.0/24",
      "metadata": {
        "description": "HUB Bastion subnet CIDR"
      }
    },
    "ManagementSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.2.0/24",
      "metadata": {
        "description": "HUB Management subnet CIDR"
      }
    },
    "RunnersSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.3.0/24",
      "metadata": {
        "description": "HUB Runner agents subnet CIDR"
      }
    },
    "spokeVnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/16",
      "metadata": {
        "description": "spoke vNET CIDR"
      }
    },
    "spokeFrontendSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/24",
      "metadata": {
        "description": "Spoke front-end subnet CIDR"
      }
    },
    "spokeMidtierSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.1.0/24",
      "metadata": {
        "description": "Spoke business logic subnet CIDR"
      }
    },
    "spokeBackendSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.2.0/24",
      "metadata": {
        "description": "Spoke back-end subnet CIDR"
      }
    },
    "spokeServicesSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.2.3.0/24",
      "metadata": {
        "description": "Spoke services subnet CIDR"
      }
    },
    "managementVMUser": {
      "type": "string",
      "defaultValue": "azAdmin",
      "metadata": {
        "description": "Management VM username"
      }
    },
    "managementVMPassword": {
      "type": "securestring",
      "defaultValue": "Welcome2024!",
      "metadata": {
        "description": "Management VM password"
      }
    },
    "runnerVMUser": {
      "type": "string",
      "defaultValue": "azAdmin",
      "metadata": {
        "description": "Runner Agent VM username"
      }
    },
    "runnerVMPassword": {
      "type": "securestring",
      "defaultValue": "Welcome2024!",
      "metadata": {
        "description": "Runner Agent VM password"
      }
    }
  },
  "variables": {
    "suffix": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "la-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "logworkspaceName": {
            "value": "la-hub"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "PerGB2018"
          },
          "retention": {
            "value": 30
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "5813230445666576623"
            }
          },
          "parameters": {
            "logworkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the workspace"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location of the workspace"
              }
            },
            "sku": {
              "type": "string",
              "allowedValues": [
                "Free",
                "Standalone",
                "PerNode",
                "PerGB2018"
              ],
              "metadata": {
                "description": "SKU for the workspace"
              }
            },
            "retention": {
              "type": "int",
              "metadata": {
                "description": "Retention time in days for the workspace. 730 Days is the max for non unlimited skus"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logworkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                },
                "retentionInDays": "[parameters('retention')]",
                "publicNetworkAccessForIngestion": "Disabled",
                "publicNetworkAccessForQuery": "Disabled"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the deployed log analytics workspace."
              },
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logworkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "HubNetwork-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('hubvnetAddressPrefix')]"
          },
          "bastionSubnetPrefix": {
            "value": "[parameters('BastionSubnetPrefix')]"
          },
          "managementSubnetPrefix": {
            "value": "[parameters('ManagementSubnetPrefix')]"
          },
          "runneragentSubnetPrefix": {
            "value": "[parameters('RunnersSubnetPrefix')]"
          },
          "servicesSubnetPrefix": {
            "value": "[parameters('ServicesSubnetPrefix')]"
          },
          "logworkspaceid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'la-deployment'), '2022-09-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "6017185047028956224"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the vnet"
              }
            },
            "bastionSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the bastion subnet"
              }
            },
            "managementSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the management subnet"
              }
            },
            "runneragentSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the runneragents subnet"
              }
            },
            "servicesSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the services subnet"
              }
            },
            "logworkspaceid": {
              "type": "string",
              "metadata": {
                "description": "The ID of the logworkspace"
              }
            }
          },
          "variables": {
            "vnetName": "vnet-hub",
            "bastionSubnetName": "AzureBastionSubnet",
            "managementSubnetName": "snet-hub-management",
            "runneragentSubnetName": "snet-hub-runneragents",
            "servicesSubnetName": "snet-hub-services"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-08-01",
              "name": "nsg-hub-bastion",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "bastionInAllow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "Internet",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastionControlInAllow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationPortRanges": [
                        "443",
                        "4443"
                      ],
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowLoadBalancerInBound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowBastionHostCommunicationInBound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastionInDeny",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Deny",
                      "priority": 900,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "bastionVnetOutAllow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ],
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "bastionAzureOutAllow",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', 'nsg-hub-bastion')]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-bastion')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "nsg-hub-management",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', 'nsg-hub-management')]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-management')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "nsg-hub-runneragent",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', 'nsg-hub-runneragent')]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-runneragent')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "nsg-hub-services",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', 'nsg-hub-services')]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-services')]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('bastionSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-bastion')]"
                      }
                    }
                  },
                  {
                    "name": "[variables('managementSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('managementSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-management')]"
                      }
                    }
                  },
                  {
                    "name": "[variables('runneragentSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('runneragentSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-runneragent')]"
                      }
                    }
                  },
                  {
                    "name": "[variables('servicesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('servicesSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-services')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-bastion')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-management')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-runneragent')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub-services')]"
              ]
            }
          ],
          "outputs": {
            "vnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            },
            "bastionSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('bastionSubnetName'))]"
            },
            "managementSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('managementSubnetName'))]"
            },
            "runneragentSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('runneragentSubnetName'))]"
            },
            "servicesSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('servicesSubnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'la-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PIP-Bastion-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "publicIpAddressName": {
            "value": "pip-bastion"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "Standard"
          },
          "publicIPAllocationMethod": {
            "value": "Static"
          },
          "ddosProtectionMode": {
            "value": "Enabled"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "508362490791024294"
            }
          },
          "parameters": {
            "publicIpAddressName": {
              "type": "string",
              "defaultValue": "myPublicIPAddress",
              "metadata": {
                "description": "Name of the public IP address resource."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region for the deployment, resource group and resources."
              }
            },
            "extendedLocation": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard",
                "Basic"
              ],
              "metadata": {
                "description": "Sku for the resource."
              }
            },
            "domainNameLabel": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Domain name label for the resource."
              }
            },
            "domainNameLabelScope": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Domain name label scope for the resource."
              }
            },
            "routingPreference": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Routing Preference for the resource."
              }
            },
            "publicIPAllocationMethod": {
              "type": "string",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Allocation method for the resource."
              }
            },
            "publicIpAddressVersion": {
              "type": "string",
              "defaultValue": "IPv4",
              "allowedValues": [
                "IPv4",
                "IPv6"
              ],
              "metadata": {
                "description": "Version for the resource."
              }
            },
            "idleTimeoutInMinutes": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "Idle Timeout for the resource."
              }
            },
            "tier": {
              "type": "string",
              "defaultValue": "Regional",
              "allowedValues": [
                "Regional",
                "Global"
              ],
              "metadata": {
                "description": "Tier for the resource."
              }
            },
            "zones": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Zones for the resource."
              }
            },
            "ddosProtectionMode": {
              "type": "string",
              "allowedValues": [
                "Disabled",
                "Enabled",
                "VirtualNetworkInherited"
              ]
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional tags for the resources."
              }
            }
          },
          "variables": {
            "dns": {
              "domainNameLabel": "[parameters('domainNameLabel')]",
              "domainNameLabelScope": "[parameters('domainNameLabelScope')]"
            },
            "tags": [
              {
                "ipTagType": "RoutingPreference",
                "tag": "[parameters('routingPreference')]"
              }
            ],
            "ipTagsVariable": "[if(empty(parameters('routingPreference')), null(), variables('tags'))]",
            "ddosSettings": "[if(empty(parameters('ddosProtectionMode')), null(), createObject('protectionMode', parameters('ddosProtectionMode')))]",
            "propertiesNoDns": {
              "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
              "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
              "publicIPAddressVersion": "[parameters('publicIpAddressVersion')]",
              "ipTags": "[variables('ipTagsVariable')]",
              "ddosSettings": "[variables('ddosSettings')]"
            },
            "propertiesDns": {
              "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
              "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
              "publicIPAddressVersion": "[parameters('publicIpAddressVersion')]",
              "dnsSettings": "[variables('dns')]",
              "ipTags": "[variables('ipTagsVariable')]",
              "ddosSettings": "[variables('ddosSettings')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[parameters('publicIpAddressName')]",
              "location": "[parameters('location')]",
              "extendedLocation": "[if(empty(parameters('extendedLocation')), null(), parameters('extendedLocation'))]",
              "zones": "[parameters('zones')]",
              "tags": "[parameters('tagsByResource')]",
              "sku": {
                "name": "[parameters('sku')]",
                "tier": "[parameters('tier')]"
              },
              "properties": "[if(empty(parameters('domainNameLabel')), variables('propertiesNoDns'), variables('propertiesDns'))]"
            }
          ],
          "outputs": {
            "pipid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "bastion-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "Hub"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetname": {
            "value": "vnet-hub"
          },
          "bastionSubnetName": {
            "value": "AzureBastionSubnet"
          },
          "bastionPIPid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'PIP-Bastion-deployment'), '2022-09-01').outputs.pipid.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8886481131183844145"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "This is the base name for each Azure resource name"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "vnetname": {
              "type": "string",
              "metadata": {
                "description": "vnet name"
              }
            },
            "bastionSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Bastion subnet name"
              }
            },
            "bastionPIPid": {
              "type": "string",
              "metadata": {
                "description": "Bastion public ip resource ID"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-08-01",
              "name": "[format('bas-{0}', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "subnet": {
                        "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), parameters('bastionSubnetName'))]"
                      },
                      "publicIPAddress": {
                        "id": "[parameters('bastionPIPid')]"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'PIP-Bastion-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AMPLS-Hub-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "workspaceResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'la-deployment'), '2022-09-01').outputs.resourceId.value]"
          },
          "workspaceSubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment'), '2022-09-01').outputs.servicesSubnetID.value]"
          },
          "vnetResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment'), '2022-09-01').outputs.vnetResourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12346809028294016377"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "location of workspace"
              }
            },
            "workspaceSubnetID": {
              "type": "string",
              "metadata": {
                "description": "subnet ID for workspace"
              }
            },
            "vnetResourceID": {
              "type": "string",
              "metadata": {
                "description": "vnet resource ID for workspace"
              }
            },
            "workspaceResourceID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID for workspace"
              }
            },
            "zones": {
              "type": "array",
              "defaultValue": [
                "agentsvc.azure-automation.net",
                "[format('blob.{0}', environment().suffixes.storage)]",
                "monitor.azure.com",
                "ods.opinsights.azure.com",
                "oms.opinsights.azure.com"
              ]
            }
          },
          "variables": {
            "suffix": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "microsoft.insights/privateLinkScopes",
              "apiVersion": "2021-07-01-preview",
              "name": "ampls-Hub",
              "location": "global",
              "properties": {
                "accessModeSettings": {
                  "ingestionAccessMode": "PrivateOnly",
                  "queryAccessMode": "Open"
                }
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "pe-ampls-Hub",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('workspaceSubnetID')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "pe-ampls-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('microsoft.insights/privateLinkScopes', 'ampls-Hub')]",
                      "groupIds": [
                        "azuremonitor"
                      ]
                    }
                  }
                ],
                "customNetworkInterfaceName": "[format('pe-ampls-{0}-nic', variables('suffix'))]"
              },
              "dependsOn": [
                "[resourceId('microsoft.insights/privateLinkScopes', 'ampls-Hub')]",
                "privateDnsZoneForAmpls"
              ]
            },
            {
              "type": "Microsoft.Insights/privateLinkScopes/scopedResources",
              "apiVersion": "2021-07-01-preview",
              "name": "[format('{0}/{1}', 'ampls-Hub', 'amplsScopedLaw')]",
              "properties": {
                "linkedResourceId": "[parameters('workspaceResourceID')]"
              },
              "dependsOn": [
                "[resourceId('microsoft.insights/privateLinkScopes', 'ampls-Hub')]"
              ]
            },
            {
              "copy": {
                "name": "privateDnsZoneForAmpls",
                "count": "[length(parameters('zones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink.{0}', parameters('zones')[copyIndex()])]",
              "location": "global",
              "properties": {}
            },
            {
              "copy": {
                "name": "privateDnsZoneLink",
                "count": "[length(parameters('zones'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('privatelink.{0}', parameters('zones')[copyIndex()]), format('{0}-link', parameters('zones')[copyIndex()]))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetResourceID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}', parameters('zones')[copyIndex()]))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', 'pe-ampls-Hub', 'pvtEndpointDnsGroupForAmpls')]",
              "properties": {
                "copy": [
                  {
                    "name": "privateDnsZoneConfigs",
                    "count": "[length(parameters('zones'))]",
                    "input": {
                      "name": "[format('privatelink.{0}', parameters('zones')[copyIndex('privateDnsZoneConfigs')])]",
                      "properties": {
                        "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}', parameters('zones')[copyIndex('privateDnsZoneConfigs')]))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', 'pe-ampls-Hub')]",
                "privateDnsZoneForAmpls"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'la-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ManagementVM-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment'), '2022-09-01').outputs.managementSubnetID.value]"
          },
          "vmName": {
            "value": "Mgmt01"
          },
          "vmAdminUserName": {
            "value": "[parameters('managementVMUser')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('managementVMPassword')]"
          },
          "vmSize": {
            "value": "Standard_B2ms"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13156253837114046879"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "location to deploy the VM"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "subnet ID the VM should be tied to"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "name of the VM"
              }
            },
            "vmAdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Username for the admin"
              }
            },
            "vmAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "password for the admin account"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "SKU size"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-mid', parameters('vmName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName'))))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUserName')]",
                  "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "authentication": {
                    "managedIdentity": {
                      "identifier-name": "mi_res_id",
                      "identifier-value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "windowsVMId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "windowsVMName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "RunnerAgentVM-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment'), '2022-09-01').outputs.runneragentSubnetID.value]"
          },
          "vmAdminPassword": {
            "value": "[parameters('runnerVMPassword')]"
          },
          "vmAdminUserName": {
            "value": "[parameters('runnerVMUser')]"
          },
          "vmName": {
            "value": "RA01"
          },
          "vmSize": {
            "value": "Standard_B2ms"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13156253837114046879"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "location to deploy the VM"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "subnet ID the VM should be tied to"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "name of the VM"
              }
            },
            "vmAdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Username for the admin"
              }
            },
            "vmAdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "password for the admin account"
              }
            },
            "vmSize": {
              "type": "string",
              "metadata": {
                "description": "SKU size"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}-mid', parameters('vmName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName'))))]": {}
                }
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUserName')]",
                  "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureMonitorWindowsAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Monitor",
                "type": "AzureMonitorWindowsAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "authentication": {
                    "managedIdentity": {
                      "identifier-name": "mi_res_id",
                      "identifier-value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mid', parameters('vmName')))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "windowsVMId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "windowsVMName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'HubNetwork-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('NetworkSpoke-{0}-{1}-deployment', parameters('appname'), parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[format('{0}-{1}-{2}-{3}', parameters('location'), parameters('appname'), parameters('env'), variables('suffix'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('spokeVnetAddressPrefix')]"
          },
          "frontendSubnetPrefix": {
            "value": "[parameters('spokeFrontendSubnetPrefix')]"
          },
          "midtierSubnetPrefix": {
            "value": "[parameters('spokeMidtierSubnetPrefix')]"
          },
          "backendubnetPrefix": {
            "value": "[parameters('spokeBackendSubnetPrefix')]"
          },
          "servicesSubnetPrefix": {
            "value": "[parameters('spokeServicesSubnetPrefix')]"
          },
          "logworkspaceid": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'la-deployment'), '2022-09-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2679668680747340819"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "Base name for the application"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The resource group location"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the vnet"
              }
            },
            "frontendSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the bastion subnet"
              }
            },
            "midtierSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the management subnet"
              }
            },
            "backendubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the runneragents subnet"
              }
            },
            "servicesSubnetPrefix": {
              "type": "string",
              "metadata": {
                "description": "The CIDR range for the services subnet"
              }
            },
            "logworkspaceid": {
              "type": "string",
              "metadata": {
                "description": "The ID of the logworkspace"
              }
            }
          },
          "variables": {
            "vnetName": "[format('vnet-{0}', parameters('baseName'))]",
            "frontentSubnetName": "[format('snet-{0}-frontend', parameters('baseName'))]",
            "midtierSubnetName": "[format('snet-{0}-businesslogic', parameters('baseName'))]",
            "backendSubnetName": "[format('snet-{0}-backend', parameters('baseName'))]",
            "servicesSubnetName": "[format('snet-{0}-services', parameters('baseName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-08-01",
              "name": "[format('nsg-{0}-frontend', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-frontend', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-bussineslogic', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-bussineslogic', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bussineslogic', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-backend', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-backend', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('nsg-{0}-services', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-{0}-services', parameters('baseName')))]",
              "name": "to-la",
              "properties": {
                "workspaceId": "[parameters('logworkspaceid')]",
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('frontentSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('frontendSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('midtierSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('midtierSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bussineslogic', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('backendSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('backendubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('servicesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('servicesSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-backend', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-frontend', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-bussineslogic', parameters('baseName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-services', parameters('baseName')))]"
              ]
            }
          ],
          "outputs": {
            "vnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            },
            "frontendSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('frontentSubnetName'))]"
            },
            "midtierSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('midtierSubnetName'))]"
            },
            "backendSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('backendSubnetName'))]"
            },
            "servicesSubnetID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('servicesSubnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'la-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vNETPeering-Deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sourceNetworkname": {
            "value": "vnet-hub"
          },
          "destinationNetworkname": {
            "value": "[format('vnet-{0}-{1}-{2}-{3}', parameters('location'), parameters('appname'), parameters('env'), variables('suffix'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1444200431379011727"
            }
          },
          "parameters": {
            "sourceNetworkname": {
              "type": "string"
            },
            "destinationNetworkname": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('sourceNetworkname'), format('{0}-To-{1}', parameters('sourceNetworkname'), parameters('destinationNetworkname')))]",
              "properties": {
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('destinationNetworkname'))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('destinationNetworkname'), format('{0}-To-{1}', parameters('destinationNetworkname'), parameters('sourceNetworkname')))]",
              "properties": {
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('sourceNetworkname'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('NetworkSpoke-{0}-{1}-deployment', parameters('appname'), parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('keyvault-{0}-{1}-deployment', parameters('appname'), parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "suffix": {
            "value": "[variables('suffix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vNETResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('NetworkSpoke-{0}-{1}-deployment', parameters('appname'), parameters('env'))), '2022-09-01').outputs.vnetResourceId.value]"
          },
          "subnetResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('NetworkSpoke-{0}-{1}-deployment', parameters('appname'), parameters('env'))), '2022-09-01').outputs.servicesSubnetID.value]"
          },
          "privateDnsZoneName": {
            "value": "[format('privatelink{0}', environment().suffixes.keyvaultDns)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11042031665866075392"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "metadata": {
                "description": "Keyvault suffix"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Deployment location"
              }
            },
            "vNETResourceID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID for the vNET the Private Endpoint will be deployed in"
              }
            },
            "subnetResourceID": {
              "type": "string",
              "metadata": {
                "description": "subnet resource ID for keyvault private endpoint"
              }
            },
            "privateDnsZoneName": {
              "type": "string",
              "metadata": {
                "description": "Zone name for private DNS"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-10-01",
              "name": "[format('kv-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-01-01",
              "name": "[format('pe-kv-{0}', parameters('suffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('pe-kv-{0}', parameters('suffix'))]",
                    "properties": {
                      "groupIds": [
                        "vault"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetResourceID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}/vault-PrivateDnsZoneGroup', format('pe-kv-{0}', parameters('suffix')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[parameters('privateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-kv-{0}', parameters('suffix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), uniqueString(resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vNETResourceID')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('kv-{0}', parameters('suffix')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('NetworkSpoke-{0}-{1}-deployment', parameters('appname'), parameters('env')))]"
      ]
    }
  ]
}